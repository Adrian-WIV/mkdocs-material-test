{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs -h</code> - Print help message and exit.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"admonitions/","title":"Admonitions","text":"<p>Achtung</p> <p>Da unten gibt es schlechten Humor.</p> <p>Collapsible callout:</p> Aufklappbar <p>Klapp mich zu.</p>"},{"location":"code_beispiel/","title":"Code beispiel","text":"pygame<pre><code>import pygame\n\nimport random\n\nclass Ball:\n    def __init__(self):\n        self.x = 300\n        self.y = 220\n        self.radius = 40\n        self.color = (255,140,0)\n        self.movex = random.randint(-3,3)\n        self.movey = random.randint(-3,3)\n\n    def draw(self):\n        pygame.draw.ellipse(screen, ball.color, [ball.x, ball.y, ball.radius, ball.radius])\n\n\n\npygame.init()\n\nball = Ball()\nball2 = Ball()\n\n#Farben\n\norange = (255, 140, 0)\n\nwhite = (255, 255, 255)\n\n#spielfeld\n\nfensterbreite = 640\n\nfenstehoehe = 480\n\n#spielfenster\n\nscreen = pygame.display.set_mode((fensterbreite, fenstehoehe))\nclock = pygame.time.Clock()\npygame.display.set_caption(\"G\u00f6tz stinkt nach Maggi\")\n\n\ngameon = True\n\nwhile gameon:\n\n    for event in pygame.event.get():\n        if event.type == pygame.QUIT:\n            gameon = False\n\n\n\n    ball.x += ball.movex\n    ball.y += ball.movey\n\n    if ball.x - ball.radius &lt;= 0 or ball.x + ball.radius &gt;= fensterbreite:\n        ball.movex *= -1\n\n    if ball.y - ball.radius &lt;= 0 or ball.y + ball.radius &gt;= fenstehoehe:\n        ball.movey *= -1\n\n\n\n\n    screen.fill(white)\n    pygame.draw.ellipse(screen, ball.color, [ball.x, ball.y, ball.radius, ball.radius])\n\n    #Fenster aktualisieren\n\n    pygame.display.flip()\n\n#Refresh-Timer\n    clock.tick(60)\n\n\npygame.quit()\n</code></pre>"},{"location":"content_tabs/","title":"Content tabs","text":""},{"location":"content_tabs/#content-tabs","title":"Content Tabs","text":"<p>This is some examples of content tabs.</p>"},{"location":"content_tabs/#generic-content","title":"Generic Content","text":"Plain textUnordered listOrdered listPythonJavaScript <p>This is some plain text</p> <ul> <li>First item</li> <li>Second item</li> <li>Third item</li> </ul> <ol> <li>First item</li> <li>Second item</li> <li>Third item</li> </ol> <pre><code>def main():\n    print(\"Hello world!\")\n\nif __name__ == \"__main__\":\n    main()\n</code></pre> <pre><code>function main() {\n    console.log(\"Hello world!\");\n}\n\nmain();\n</code></pre>"},{"location":"content_tabs/#code-blocks-in-content-tabs","title":"Code Blocks in Content Tabs","text":""},{"location":"diagramme/","title":"Diagram Examples","text":""},{"location":"diagramme/#flowcharts","title":"Flowcharts","text":"<pre><code>graph LR\n  A[Start] --&gt; B{Failure?};\n  B --&gt;|Yes| C[Investigate...];\n  C --&gt; D[Debug];\n  D --&gt; B;\n  B ----&gt;|No| E[Success!];</code></pre>"},{"location":"diagramme/#sequence-diagrams","title":"Sequence Diagrams","text":"<pre><code>sequenceDiagram\n  autonumber\n  Server-&gt;&gt;Terminal: Send request\n  loop Health\n      Terminal-&gt;&gt;Terminal: Check for health\n  end\n  Note right of Terminal: System online\n  Terminal--&gt;&gt;Server: Everything is OK\n  Terminal-&gt;&gt;Database: Request customer data\n  Database--&gt;&gt;Terminal: Customer data</code></pre>"}]}